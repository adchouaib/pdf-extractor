// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PdfExtractor.Api.Data;
using Pgvector;

#nullable disable

namespace PdfExtractor.Api.Migrations
{
    [DbContext(typeof(PdfExtractorContext))]
    partial class PdfExtractorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PdfExtractor.Api.Document.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("file_name");

                    b.HasKey("Id");

                    b.ToTable("documents", (string)null);
                });

            modelBuilder.Entity("PdfExtractor.Api.Document.Entities.DocumentEmbedding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uuid");

                    b.Property<Vector>("Embedding")
                        .IsRequired()
                        .HasColumnType("vector(1536)")
                        .HasColumnName("embedding");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("Embedding")
                        .HasDatabaseName("documents_embedding_idx")
                        .HasAnnotation("Npgsql:StorageParameter:lists", 100);

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Embedding"), "ivfflat");

                    b.ToTable("document_embeddings", (string)null);
                });

            modelBuilder.Entity("PdfExtractor.Api.Document.Entities.DocumentEmbedding", b =>
                {
                    b.HasOne("PdfExtractor.Api.Document.Entities.Document", "Document")
                        .WithMany("Embeddings")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("PdfExtractor.Api.Document.Entities.Document", b =>
                {
                    b.Navigation("Embeddings");
                });
#pragma warning restore 612, 618
        }
    }
}
